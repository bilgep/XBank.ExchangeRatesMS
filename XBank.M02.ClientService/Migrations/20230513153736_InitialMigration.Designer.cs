// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using XBank.M02.ClientService.Data;

#nullable disable

namespace XBank.M02.ClientService.Migrations
{
    [DbContext(typeof(ClientDbContext))]
    [Migration("20230513153736_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("XBank.M02.ClientService.Entities.Account", b =>
                {
                    b.Property<long>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AccountType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Balance")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("AccountId");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            AccountId = 1L,
                            AccountType = "EUR",
                            Balance = "102.03"
                        },
                        new
                        {
                            AccountId = 2L,
                            AccountType = "USD",
                            Balance = "200.00"
                        },
                        new
                        {
                            AccountId = 3L,
                            AccountType = "EUR",
                            Balance = "527.09"
                        },
                        new
                        {
                            AccountId = 4L,
                            AccountType = "USD",
                            Balance = "10000.00"
                        });
                });

            modelBuilder.Entity("XBank.M02.ClientService.Entities.Client", b =>
                {
                    b.Property<long>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("ClientId");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            ClientId = 1L,
                            FirstName = "Client01Name",
                            LastName = "Client01LastName"
                        },
                        new
                        {
                            ClientId = 2L,
                            FirstName = "Client02Name",
                            LastName = "Client02LastName"
                        });
                });

            modelBuilder.Entity("XBank.M02.ClientService.Entities.ClientAccounts", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("AccountId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AccountType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("ClientId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ClientAccounts");

                    b.HasData(
                        new
                        {
                            Id = 10L,
                            AccountId = 1L,
                            AccountType = "EUR",
                            ClientId = 1L
                        },
                        new
                        {
                            Id = 11L,
                            AccountId = 2L,
                            AccountType = "USD",
                            ClientId = 1L
                        },
                        new
                        {
                            Id = 12L,
                            AccountId = 3L,
                            AccountType = "EUR",
                            ClientId = 2L
                        },
                        new
                        {
                            Id = 13L,
                            AccountId = 4L,
                            AccountType = "USD",
                            ClientId = 2L
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
